'''
假设你正在爬楼梯。需要 n 阶你才能到达楼顶。
每次你可以爬 1 或 2 个台阶。你有多少种不同的方法可以爬到楼顶呢？
'''


'''
一级台阶  1种方法
二级台阶  2种方法
三级台阶  3种方法
1, 2, 3, 5, 8, 13, 21, 34, 55....


f(n)=f(n-1)+f(n-2)
最后一次递归调用 f(2)=f(1)+f(0)
边界就是 f(1)=f(0)=1  因为二级楼梯有两种爬法
'''

class Solution:
    def climbStairs(self, n: int) -> int:
        a,b=1,1

        # 从2级楼梯开始
        for _ in range(2,n+1):
            a,b=b,a+b
        return b    # 当n是1级台阶时 直接返回 b